# frozen_string_literal: true

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  config.hosts.clear

  # In the development environment your application's code is reloaded on
  # every request. This slows down response time but is perfect for development
  # since you don't have to restart the web server when you make code changes.
  config.cache_classes = false

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports and disable caching.
  config.consider_all_requests_local = true

  # Enable server timing
  config.server_timing = true

  # Enable/disable caching. By default caching is disabled.
  # Run rails dev:cache to toggle caching.
  if Rails.root.join('tmp/caching-dev.txt').exist?
    config.action_controller.perform_caching               = true
    config.action_controller.enable_fragment_cache_logging = true

    config.public_file_server.headers = {
      'Cache-Control' => "public, max-age=#{2.days.to_i}"
    }
  else
    config.action_controller.perform_caching               = false
    config.action_controller.enable_fragment_cache_logging = false

    config.cache_store = :null_store
  end

  # Store uploaded files on the local file system (see config/storage.yml for options)
  # config.active_storage.service = :local

  # In development, javascripts files are generated by webpack dev server
  config.action_controller.asset_host = ENV['WEBSITE_FULL_ASSET']

  # Log file for development
  config.logger = ActiveSupport::TaggedLogging.new(Logger.new('log/development.log'))

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Raise exceptions for disallowed deprecations.
  config.active_support.disallowed_deprecation = :raise

  # Tell Active Support which deprecation messages to disallow.
  config.active_support.disallowed_deprecation_warnings = []

  # Raise an error on page load if there are pending migrations.
  config.active_record.migration_error = :page_load

  # Highlight code that triggered database queries in logs.
  config.active_record.verbose_query_logs = true

  # Raise warning when loading large data set
  config.active_record.warn_on_records_fetched_greater_than = 1500

  # Use an evented file watcher to asynchronously detect changes in source code,
  # routes, locales, etc. This feature depends on the listen gem.
  config.file_watcher = ActiveSupport::EventedFileUpdateChecker

  # Mails
  # Don't care if the mailer can't send.
  config.action_mailer.raise_delivery_errors = false

  config.action_mailer.default_url_options   = { host: ENV['WEBSITE_ADDRESS'] }
  config.action_mailer.delivery_method       = :smtp
  config.action_mailer.perform_deliveries    = false
  config.action_mailer.raise_delivery_errors = false
  config.action_mailer.perform_caching       = false
  config.action_mailer.preview_path          = Rails.root.join('spec/mailers/previews')
  config.action_mailer.logger                = Logger.new(STDOUT)
  config.action_mailer.default charset: 'utf-8'

  # "pretty" HTML format output
  Slim::Engine.set_options pretty: true

  # Log levels :debug, :info, :warn, :error, :fatal and :unknown
  config.log_level = :info

  # Annotate rendered view with file names.
  config.action_view.annotate_rendered_view_with_filenames = true

  # N 1 Queries
  config.after_initialize do
    Bullet.enable               = false
    Bullet.alert                = false
    Bullet.bullet_logger        = false
    Bullet.console              = false
    Bullet.rails_logger         = true
    Bullet.add_footer           = false
    Bullet.counter_cache_enable = true
  end
end
