html {
  box-sizing: border-box;
  color: $text-color;
  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
  font-size: 17px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smooth: antialiased;
  font-weight: 400;
  line-height: 1.5;

  //@media only screen and (min-width: $medium-screen) {
  //  font-size: 16px;
  //}

  @media only screen and (min-width: $large-screen) {
    font-size: 18px;
  }
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

a {
  color: $link-color;
  // Gets rid of tap active state
  -webkit-tap-highlight-color: transparent;
  text-decoration: none;
  word-wrap: break-word;
}

.container {
  margin: 0 auto;
  max-width: 1280px;
  position: relative;
  width: 90%;

  @media #{$large-and-up} {
    width: 70%;
  }

  @media #{$large-and-down} {
    width: 85%;
  }

  @media #{$medium-and-up} {
    width: 85%;
  }

  @media #{$small-and-down} {
    width: 90%;
  }
}

.col .row {
  margin-left: (-1 * $gutter-width / 2);
  margin-right: (-1 * $gutter-width / 2);
}

// Mixins to eliminate code repitition
@mixin reset-offset {
  left: auto;
  margin-left: auto;
  right: auto;
}

@mixin grid-classes($size, $i, $perc) {
  &.offset-#{$size}#{$i} {
    margin-left: $perc !important;
  }
  &.pull-#{$size}#{$i} {
    right: $perc;
  }
  &.push-#{$size}#{$i} {
    left: $perc;
  }
}

.row {
  margin-bottom: 20px;
  margin-left: -.75rem;
  margin-right: -.75rem;

  // Clear floating children
  &::after {
    clear: both;
    content: '';
    display: table;
  }

  &.input-form {
    margin-bottom: 0;
  }

  .col {
    box-sizing: border-box;
    float: left;
    min-height: 1px;
    padding: 0 $gutter-width / 2;

    &[class*='push-'],
    &[class*='pull-'] {
      position: relative;
    }

    $i: 1;
    @while $i <= $num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + '%');
      &.s#{$i} {
        @include reset-offset;
        margin-left: 0;
        width: $perc;
      }
      @include grid-classes('s', $i, $perc);
      $i: $i + 1;
    }

    @media #{$medium-and-up} {
      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + '%');
        &.m#{$i} {
          @include reset-offset;
          margin-left: 0;
          width: $perc;
        }
        @include grid-classes('m', $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$medium-only} {
      .col.offset-m0 {
        margin-left: 0;
      }
    }

    @media #{$large-and-up} {
      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + '%');
        &.l#{$i} {
          @include reset-offset;
          margin-left: 0;
          width: $perc;
        }
        @include grid-classes('l', $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$large-and-up} {
      .col.offset-l0 {
        margin-left: 0 !important;
      }
    }

    @media #{$extra-large-and-up} {
      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + '%');
        &.xl#{$i} {
          @include reset-offset;
          margin-left: 0;
          width: $perc;
        }
        @include grid-classes('xl', $i, $perc);
        $i: $i + 1;
      }
    }
  }
}

@for $i from 0 through 20 {
  .margin-bottom-#{$i * 5} {
    clear: both;
    margin-bottom: $i * 5px;
  }

  .margin-top-#{$i * 5} {
    clear: both;
    margin-top: $i * 5px;
  }
}

//@for $i from 0 through 10 {
//  @media (max-width: $small-screen) {
//    .sm-margin-top-#{$i * 10} {
//      margin-top: $i * 10px !important;
//    }
//
//    .sm-margin-bottom-#{$i * 10} {
//      margin-bottom: $i * 10px !important;
//    }
//  }
//
//  @media (max-width: $medium-screen) {
//    .md-margin-top-#{$i * 10} {
//      margin-top: $i * 10px !important;
//    }
//
//    .md-margin-bottom-#{$i * 10} {
//      margin-bottom: $i * 10px !important;
//    }
//  }
//}
