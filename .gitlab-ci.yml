stages:
  - build
  - test
  - deploy
  - check

variables:
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"
  NODE_COMPILE_CACHE: "~/.cache/nodejs-compile-cache"
  MAKEFLAGS: "--jobs $(nproc)"

before_script:
  - date
  - rvm gemset use InRailsWeBlog

after_script:
  - date

build:
  stage: build
  cache:
    - key: "Gems"
      paths:
        - ".bundle/"
        - "vendor/bundle/"
      policy: pull-push
    - key: "NPM"
      paths:
        - "node_modules/"
      policy: pull-push
  variables:
    BUNDLE_PATH: vendor/bundle
    BUNDLE_BIN: vendor/bundle/bin
  script:
    - ruby -v
    - node -v
    - yarn --version
    - which ruby
    - gem install bundler
    - bundle config set --local path 'vendor/bundle'
    - bundle install --quiet --jobs $(nproc) "${FLAGS[@]}"
    - yarn install --immutable
    - echo "BEFORE_LAST_TAG=$(git describe --abbrev=0 $(git rev-list --tags --max-count=2) | tail -1)" >> build.env
  interruptible: true
  rules:
    - if: '$CI_COMMIT_TAG' && '$CI_COMMIT_BRANCH == "master"'
    - when: never

check_code:
  stage: test
  cache:
    - key: "Gems"
      paths:
        - ".bundle/"
        - "vendor/bundle/"
      policy: pull
  script:
    - bundle exec rails InRailsWeBlog:check_code
  interruptible: true
  needs: ["build"]
  rules:
    - if: '$CI_COMMIT_TAG' && '$CI_COMMIT_BRANCH == "master"'
    - when: never

audit:
  stage: test
  cache: { }
  script:
    - gem install bundler-audit
    - bundle audit check --update
#    - yarn npm audit
  interruptible: true
  allow_failure: true
  needs: ["build"]
  rules:
    - if: '$CI_COMMIT_TAG' && '$CI_COMMIT_BRANCH == "master"'
      changes:
        - app/**/*.rb
    - when: never

brakeman:
  stage: test
  cache:
    - key: "Gems"
      paths:
        - ".bundle/"
        - "vendor/bundle/"
      policy: pull
  script:
    - bundle exec brakeman -q
  interruptible: true
  allow_failure: true
  needs: ["build"]
  rules:
    - if: '$CI_COMMIT_TAG' && '$CI_COMMIT_BRANCH == "master"'
      changes:
        - app/**/*.rb
        - config/**/*.rb
        - db/**/*.rb
        - lib/**/*.rb
    - when: never

test:rails:
  stage: test
  variables:
    RAILS_ENV: "test"
    COVERAGE: "true"
  cache:
    - key: "Gems"
      paths:
        - .bundle/
        - vendor/bundle/
      policy: pull
  script:
    - bundle exec i18n export
    - bundle exec rspec
  interruptible: true
  needs: ["build"]
  retry: 1
  rules:
    - if: '$CI_COMMIT_TAG' && '$CI_COMMIT_BRANCH == "master"'
      changes:
        - app/**/*.rb
        - config/**/*.rb
        - db/**/*.rb
        - lib/**/*.rb
        - spec/**/*.rb
    - when: never

## Inconsistent tests
#test:browser:
#  stage: test
#  variables:
#    TEST_PORT: 3021
#    RAILS_ENV: "test"
#  cache:
#    - key: "Gems"
#      paths:
#        - .bundle/
#        - vendor/bundle/
#      policy: pull
#  script:
#    - bundle exec rspec --tag advanced spec/
#  interruptible: true
#  # Unstable tests
#  allow_failure: true
#  needs: ["build"]

#test:npm:
#  stage: test
#  variables:
#    RAILS_ENV: "test"
#  cache:
#    - key: "NPM"
#      paths:
#        - "node_modules/"
#      policy: pull
#  script:
#    - npm run test
#  interruptible: true
#  needs: ["build"]

deploy:
  stage: deploy
  # Variables defined in Gitlab configuration (settings/ci_cd)
  variables:
    RAILS_ENV: "production"
    NODE_ENV: "production"
  environment:
    name: production
    url: https://www.ginkonote.com
  cache:
    - key: "Gems"
      paths:
        - ".bundle/"
        - "vendor/bundle/"
      policy: pull-push
    - key: "NPM"
      paths:
        - "node_modules/"
      policy: pull-push
  script:
    - bundle exec cap production deploy
  interruptible: true
  rules:
    - if: '$CI_COMMIT_TAG' && '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - when: never

check:deploy:
  stage: check
  cache: { }
  script:
    - sh -c '[ $(curl --head -o /dev/null -L -s -w "%{http_code}" https://www.ginkonote.com/health_check.json) -eq 200 ]'
    - sh -c '[ $(curl --head -o /dev/null -L -s -w "%{http_code}" https://www.ginkonote.com) -eq 200 ]'
  interruptible: true
  rules:
    - if: '$CI_COMMIT_TAG' && '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - when: never
