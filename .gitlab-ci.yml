stages:
  - build
  - test
  - deploy
  - check

.default-cache: &default-cache
  key: "ruby-2.6.3-inrailsweblog"
  paths:
    - .bundle
    - vendor/bundle
    - .yarn-cache
    - node_modules

.push-cache: &push-cache
  cache:
    <<: *default-cache
    policy: push

.pull-cache: &pull-cache
  cache:
    <<: *default-cache
    policy: pull

before_script:
  - date
  - rvm gemset use InRailsWeBlog

after_script:
  - date

build:
  stage: build
  cache:
    <<: *default-cache
  script:
    - ruby -v
    - node -v
    - yarn --version
    - which ruby
    - gem install bundler
    - bundle install --quiet --path=vendor/bundle --binstubs vendor/bundle/bin --jobs $(nproc) "${FLAGS[@]}"
    - yarn install --frozen-lockfile --cache-folder .yarn-cache
  interruptible: true
  only:
    - master

check_code:
  stage: test
  <<: *pull-cache
  script:
    - bundle exec rails InRailsWeBlog:check_code
  interruptible: true
  only:
    - master
  when: on_success

audit:
  stage: test
  <<: *pull-cache
  script:
    - gem install bundler-audit
    - bundle audit check --update --ignore CVE-2015-9284
  interruptible: true
  allow_failure: true
  only:
    - master
  when: on_success

brakeman:
  stage: test
  <<: *pull-cache
  script:
    - bundle exec brakeman -q
  interruptible: true
  allow_failure: true
  only:
    - master
  when: on_success

test:rails:
  stage: test
  variables:
    RAILS_ENV: "test"
    BASIC_TEST: "true"
    DATABASE_TEST_NAME: "inrailsweblog_test"
    DATABASE_TEST_USERNAME: "inrailsweblog_test"
    DATABASE_TEST_PASSWORD: "inrailsweblog"
    COVERAGE: "true"
  <<: *pull-cache
  script:
    - bundle exec rspec --tag basic --format RspecJunitFormatter --out rspec.xml spec/
  interruptible: true
  only:
    - master
  when: on_success

# Inconsistent tests
#test:browser:
#  stage: test
#  variables:
#    TEST_PORT: 3021
#    RAILS_ENV: "test"
#    DATABASE_TEST_NAME: "inrailsweblog_test"
#    DATABASE_TEST_USERNAME: "inrailsweblog_test"
#    DATABASE_TEST_PASSWORD: "inrailsweblog"
#  <<: *pull-cache
#  script:
#    - bundle exec rspec --tag advanced spec/
#  interruptible: true
#  # Unstable tests
#  allow_failure: true
#  only:
#    - master
#  when: on_success

test:npm:
  stage: test
  <<: *pull-cache
  script:
    - npm run test
  interruptible: true
  only:
    - master
  when: on_success

deploy:
  stage: deploy
  # Variables defined in Gitlab configuration (settings/ci_cd)
  variables:
    RAILS_ENV: "production"
    DEPLOY_SERVER: "$DEPLOY_SERVER"
    DEPLOY_USER: "$DEPLOY_USER"
    DEPLOY_GEMSET: "$DEPLOY_GEMSET"
    GIT_REPO_ADDRESS: "$GIT_REPO_ADDRESS"
    GIT_REPO_USER: "$GIT_REPO_USER"
    GIT_REPO_PORT: "$GIT_REPO_PORT"
  environment:
    name: production
    url: https://www.inrailsweblog.com
  <<: *pull-cache
  script:
    - bundle exec cap production deploy
  interruptible: true
  only:
    - master
  when: on_success

check:deploy:
  stage: check
  cache: {}
  script:
    - sh -c '[ $(curl --head -o /dev/null -L -s -w "%{http_code}" https://www.inrailsweblog.com/health_check) -eq 200 ]'
    - sh -c '[ $(curl --head -o /dev/null -L -s -w "%{http_code}" https://www.inrailsweblog.com) -eq 200 ]'
  interruptible: true
  only:
    - master
  when: on_success
