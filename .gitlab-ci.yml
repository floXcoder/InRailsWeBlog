stages:
  - build
  - test
  - deploy
  - check

before_script:
  - date
  - rvm gemset use InRailsWeBlog

after_script:
  - date

build:
  stage: build
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - .bundle/
        - vendor/bundle/
      policy: pull-push
    - key:
        files:
          - yarn.lock
      paths:
        - node_modules/
      policy: pull-push
  script:
    - ruby -v
    - node -v
    - yarn --version
    - which ruby
    - gem install bundler
    - bundle config set --local path 'vendor/bundle'
    - bundle install --quiet --binstubs vendor/bundle/bin --jobs $(nproc) "${FLAGS[@]}"
    - yarn install --frozen-lockfile
  interruptible: true
  only:
    - tags

check_code:
  stage: test
  cache: { }
  script:
    - bundle exec rails InRailsWeBlog:check_code
  interruptible: true
  when: on_success
  only:
    - tags

audit:
  stage: test
  cache: { }
  script:
    - gem install bundler-audit
    - bundle audit check --update
    - yarn audit
  interruptible: true
  allow_failure: true
  when: on_success
#  rules:
#    - changes:
#        - Gemfile.lock
#        - yarn.lock
  only:
    - tags

brakeman:
  stage: test
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - .bundle/
        - vendor/bundle/
      policy: pull
  script:
    - bundle exec brakeman -q
  interruptible: true
  allow_failure: true
  when: on_success
  only:
    - tags

test:rails:
  stage: test
  variables:
    RAILS_ENV: "test"
    BASIC_TEST: "true"
    COVERAGE: "true"
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - .bundle/
        - vendor/bundle/
      policy: pull
  script:
    - bundle exec rspec --tag basic
  interruptible: true
  when: on_success
#  rules:
#    - changes:
#        - app/**.rb
#        - config/**.rb
#        - spec/**.rb
#        - yarn.lock
  only:
    - tags

## Inconsistent tests
#test:browser:
#  stage: test
#  variables:
#    TEST_PORT: 3021
#    RAILS_ENV: "test"
#  cache:
#    - key:
#        files:
#          - Gemfile.lock
#      paths:
#        - .bundle/
#        - vendor/bundle/
#      policy: pull
#  script:
#    - bundle exec rspec --tag advanced spec/
#  interruptible: true
#  # Unstable tests
#  allow_failure: true
#  only:
#    - tags
#  when: on_success

test:npm:
  stage: test
  variables:
    RAILS_ENV: "test"
  cache:
    - key:
        files:
          - yarn.lock
      paths:
        - node_modules/
      policy: pull
  script:
    - bundle exec rails i18n:js:export
    - npm run test
  interruptible: true
  when: on_success
#  rules:
#    - changes:
#        - app/assets/javascripts/*
#        - spec/javascripts/*
  only:
    - tags

deploy:
  stage: deploy
  # Variables defined in Gitlab configuration (settings/ci_cd)
  variables:
    RAILS_ENV: "production"
    NODE_ENV: "production"
  environment:
    name: production
    url: https://www.ginkonote.com
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - .bundle/
        - vendor/bundle/
      policy: pull-push
    - key:
        files:
          - yarn.lock
      paths:
        - node_modules/
      policy: pull-push
  script:
    - bundle exec cap production deploy
  interruptible: true
  when: on_success
  only:
    - tags

check:deploy:
  stage: check
  cache: { }
  script:
    - sh -c '[ $(curl --head -o /dev/null -L -s -w "%{http_code}" https://www.ginkonote.com/health_check.json) -eq 200 ]'
    - sh -c '[ $(curl --head -o /dev/null -L -s -w "%{http_code}" https://www.ginkonote.com) -eq 200 ]'
  interruptible: true
  when: on_success
  only:
    - tags
